[{"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\index.js":"1","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\Header.jsx":"2","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemListContainer.jsx":"3","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\App.jsx":"4","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemDetail.jsx":"5","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemList.jsx":"6","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ShoppingCart.jsx":"7","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\Item.jsx":"8","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemCounter.jsx":"9"},{"size":146,"mtime":1610411407266,"results":"10","hashOfConfig":"11"},{"size":2743,"mtime":1610916753789,"results":"12","hashOfConfig":"11"},{"size":763,"mtime":1610564089987,"results":"13","hashOfConfig":"11"},{"size":6596,"mtime":1611018120357,"results":"14","hashOfConfig":"11"},{"size":1619,"mtime":1611024301241,"results":"15","hashOfConfig":"11"},{"size":369,"mtime":1610745794489,"results":"16","hashOfConfig":"11"},{"size":196,"mtime":1610745742069,"results":"17","hashOfConfig":"11"},{"size":824,"mtime":1610745749921,"results":"18","hashOfConfig":"11"},{"size":846,"mtime":1611023626857,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mzof9y",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\index.js",[],["41","42"],"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\Header.jsx",[],"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemListContainer.jsx",["43"],"import React, { useState, useEffect } from 'react';\r\nimport ItemList from './ItemList';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction ItemListContainer({ details, productsAPI }) {\r\n    const [ items, setItems ] = useState([])\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        if(id){\r\n            const category = productsAPI.filter(product => product.category == id)\r\n            setItems(category)\r\n        }\r\n        else{\r\n            setItems(productsAPI)\r\n        }\r\n\r\n    }, [id, productsAPI])\r\n\r\n    return (\r\n        <>\r\n            <h2>{details}</h2>\r\n            {productsAPI.length > 1 ? <ItemList productsAPI={items} /> : <h2>Cargando Stickers</h2>}           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemListContainer","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\App.jsx",[],"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemDetail.jsx",["44","45","46","47"],"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemList.jsx",[],"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ShoppingCart.jsx",[],"C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\Item.jsx",["48","49"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from 'react-materialize';\r\n\r\n\r\nfunction Item({ id, name, image }) {\r\n   \r\n    return (   \r\n            <Card>\r\n                <Card className=\"card-image\">\r\n                    <img src={image}/>\r\n                    <span className=\"card-title\">{name}</span>\r\n                    <a className=\"btn-floating halfway-fab waves-effect waves-light shop-cart\"><i className=\"material-icons\">add_shopping_cart</i></a>\r\n                </Card>\r\n                <div className=\"card-content\">\r\n                    <Button size=\"small\" color=\"primary\">\r\n                    <Link to={\"/item/\" + id}>Ver Detalle</Link>\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n  \r\n  \r\n        )\r\n}\r\n\r\nexport default Item","C:\\Users\\Moni\\Desktop\\tienda\\tienda\\src\\components\\ItemCounter.jsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":12,"column":77,"nodeType":"56","messageId":"57","endLine":12,"endColumn":79},{"ruleId":"58","severity":1,"message":"59","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"62","line":1,"column":38,"nodeType":"60","messageId":"61","endLine":1,"endColumn":47},{"ruleId":"63","severity":1,"message":"64","line":32,"column":13,"nodeType":"65","endLine":32,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":39,"column":13,"nodeType":"65","endLine":39,"endColumn":88},{"ruleId":"63","severity":1,"message":"64","line":11,"column":21,"nodeType":"65","endLine":11,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":13,"column":21,"nodeType":"65","endLine":13,"endColumn":96},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]